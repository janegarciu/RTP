[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(addDefaultCommands), None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(addDefaultCommands, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(initialize), None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(initialize, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(early(addPluginSbtFile="""/private/var/folders/yt/3y6brj7n1lbfhnnx65l7cj3r0000gn/T/idea.sbt"""), None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(addPluginSbtFile="""/private/var/folders/yt/3y6brj7n1lbfhnnx65l7cj3r0000gn/T/idea.sbt""", None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(boot, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(writeSbtVersion, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(reload, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtStashOnFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(onFailure loadFailed, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(loadp, None, None)[0m
[0m[[0m[0minfo[0m] [0m[0mwelcome to sbt 1.4.7 (Amazon.com Inc. Java 11.0.7)[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: plugins took 522.846304ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: defsScala took 7.347877ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /Users/janegarciu/.sbt/1.0/plugins[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/janegarciu/.sbt/1.0/plugins, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 75.958187 ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.resolveProject(global-plugins) took 167.757233ms[0m
[0m[[0m[0mdebug[0m] [0m[0m        Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/janegarciu/.sbt/1.0/plugins, plugins: List(<none>))) took 361.791375ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/janegarciu/.sbt/1.0/plugins, returning: (global-plugins)[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: loadedProjectsRaw took 466.269603ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: cleanEvalClasses took 0.653921ms[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit(file:/Users/janegarciu/.sbt/1.0/plugins/, ...) took 1044.033049ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: load took 1846.055957ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: resolveProjects took 59.407133ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: finalTransforms took 232.041365ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: config.delegates took 19.316308ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: Def.make(settings)... took 1579.806944ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: structureIndex took 243.192746ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.apply: mkStreams took 5.820721ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading global plugins from /Users/janegarciu/.sbt/1.0/plugins[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.defaultLoad until apply took 9531.285223ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: plugins took 53.096222ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: defsScala took 0.013634ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /Users/janegarciu/Documents/ActorModel/project[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.loadUnit: mkEval took 25.92521ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/janegarciu/Documents/ActorModel/project, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 2.100878 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project actormodel-build from idea.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m              Load.resolveProject(actormodel-build) took 13.277736ms[0m
[0m[[0m[0mdebug[0m] [0m[0m            Load.loadTransitive: finalizeProject(Project(id actormodel-build, base: /Users/janegarciu/Documents/ActorModel/project, plugins: List(<none>))) took 16.31508ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/janegarciu/Documents/ActorModel/project, returning: (actormodel-build)[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: loadedProjectsRaw took 362.570654ms[0m
[0m[[0m[0mdebug[0m] [0m[0m          Load.loadUnit: cleanEvalClasses took 10.291291ms[0m
[0m[[0m[0mdebug[0m] [0m[0m        Load.loadUnit(file:/Users/janegarciu/Documents/ActorModel/project/, ...) took 427.542629ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: load took 430.529688ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: resolveProjects took 0.120551ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: finalTransforms took 16.412646ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: config.delegates took 0.461313ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: Def.make(settings)... took 176.202192ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: structureIndex took 56.778575ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.apply: mkStreams took 0.002571ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading project definition from /Users/janegarciu/Documents/ActorModel/project[0m
[0m[[0m[0mdebug[0m] [0m[0mRunning task... Cancel: Signal, check cycles: false, forcegc: true[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: plugins took 3304.773035ms[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: defsScala took 0.01404ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Scanning directory /Users/janegarciu/Documents/ActorModel[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadUnit: mkEval took 2.321522ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Found non-root projects [0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/janegarciu/Documents/ActorModel, returning: ()[0m
[0m[[0m[0mdebug[0m] [0m[0mdeducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))[0m
[0m[[0m[0mdebug[0m] [0m[0m  :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)[0m
[0m[[0m[0mdebug[0m] [0m[0mPlugins.deducer#function took 2.748772 ms[0m
[0m[[0m[0minfo[0m] [0m[0mloading settings for project actormodel from build.sbt ...[0m
[0m[[0m[0mdebug[0m] [0m[0m        Load.resolveProject(actormodel) took 154.745317ms[0m
[0m[[0m[0mdebug[0m] [0m[0m      Load.loadTransitive: finalizeProject(Project(id actormodel, base: /Users/janegarciu/Documents/ActorModel, plugins: List(<none>))) took 159.267629ms[0m
[0m[[0m[0mdebug[0m] [0m[0m[Loading] Done in /Users/janegarciu/Documents/ActorModel, returning: (actormodel)[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: loadedProjectsRaw took 8738.852583ms[0m
[0m[[0m[0mdebug[0m] [0m[0m    Load.loadUnit: cleanEvalClasses took 29.390998ms[0m
[0m[[0m[0mdebug[0m] [0m[0m  Load.loadUnit(file:/Users/janegarciu/Documents/ActorModel/, ...) took 12075.559623ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: load took 12078.269643ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: resolveProjects took 0.207213ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: finalTransforms took 108.954038ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: config.delegates took 0.615051ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: Def.make(settings)... took 309.121829ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: structureIndex took 100.499809ms[0m
[0m[[0m[0mdebug[0m] [0m[0mLoad.apply: mkStreams took 0.003585ms[0m
[0m[[0m[0minfo[0m] [0m[0mset current project to ActorModel (in build file:/Users/janegarciu/Documents/ActorModel/)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(sbtPopOnFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(resumeFromFailure, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(notifyUsersAboutShell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(iflast shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(; set ideaPort in Global := 49662 ; idea-shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(set ideaPort in Global := 49662, None, None)[0m
[0m[[0m[0minfo[0m] [0m[0mDefining Global / ideaPort[0m
[0m[[0m[0minfo[0m] [0m[0mThe new value will be used by Compile / compile, Test / compile[0m
[0m[[0m[0mdebug[0m] [0m[0mDefining [0m
[0m[[0m[0mdebug[0m] [0m[0m	Global / ideaPort[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mThe new value will be used by [0m
[0m[[0m[0mdebug[0m] [0m[0m	Compile / compile[0m
[0m[[0m[0mdebug[0m] [0m[0m	Test / compile[0m
[0m[[0m[0minfo[0m] [0m[0mReapplying settings...[0m
[0m[[0m[0minfo[0m] [0m[0mset current project to ActorModel (in build file:/Users/janegarciu/Documents/ActorModel/)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(idea-shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(idea-shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(idea-shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(idea-shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(idea-shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(idea-shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(idea-shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(idea-shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(idea-shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(idea-shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(idea-shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(idea-shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(, None, None)[0m
[0m[[0m[33mwarn[0m] [0m[0mbuild source files have changed[0m
[0m[[0m[33mwarn[0m] [0m[0mmodified files: [0m
[0m[[0m[33mwarn[0m] [0m[0m  /Users/janegarciu/Documents/ActorModel/build.sbt[0m
[0m[[0m[33mwarn[0m] [0m[0mApply these changes by running `reload`.[0m
[0m[[0m[33mwarn[0m] [0m[0mAutomatically reload the build when source changes are detected by setting `Global / onChangedBuildSource := ReloadOnSourceChanges`.[0m
[0m[[0m[33mwarn[0m] [0m[0mDisable this warning by setting `Global / onChangedBuildSource := IgnoreSourceChanges`.[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(idea-shell, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(, None, None)[0m
[0m[[0m[0mdebug[0m] [0m[0m> Exec(idea-shell, None, None)[0m
